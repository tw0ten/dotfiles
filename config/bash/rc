#!/bin/bash
[[ $- = *i* ]] || return $(true)

caret() { echo -ne "\e[$* q"; }
mklc() {
	local d="$DOTFILES/etc/lc"
	cp -i "$d/$1" LICENSE || { ls "$d"; return $(false); }
	sed -i "0,/{YEAR}/s//$(\date +'%Y')/" LICENSE
	sed -i "0,/{NAME}/s//$(git config get user.name)/" LICENSE
	sed -i "0,/{EMAIL}/s//$(git config get user.email)/" LICENSE
	head -n 5 LICENSE
}
mktl() {
	mkdir "$1" && cd "$1" || return
	mkdir src lib io io/i
	echo 'io/o' > .gitignore
	echo "# $1" > README.md
	echo -e '#!/bin/sh\nrm -rf io/o\nmkdir io/o\n\ncd io\ncd o' > run
	chmod +x run && ./run
	git init
}
minifetch() { echo "$(tty):$SHLVL '$-'" | fastfetch -C ~/.config/fastfetch/mini.jsonc; }
ff() { find . -name "*$**" 2>/dev/null | $PAGER; }
mhm() { fortune | cowsay -n -f "$(cowsay -l | grep / -v | tr " " "\n" | shuf -n1)" | lolcat; }
sign() { $VISUAL "$1" && echo " - $USER, $(\date)" | tee -a "$1"; }
cd() {
	command cd "$@" || return
	git rev-parse --is-inside-work-tree >/dev/null 2>&1 \
		&& __git_ps1='git' || unset __git_ps1
}; cd .
gg() { git clone "git@github.com:$(git config get user.name)/$1" && cd "$1"; }

alias \
	s='sudo' \
	e="$VISUAL" \
	se="s $VISUAL" \
	p="$PAGER" \
	g='git' \
	t="($TERMINAL >/dev/null 2>&1 &)" \
	c='xsel --clipboard --input' \
	v='xsel --clipboard --output' \
	cl='clear' \
	o='curl -fsL' \
	oo='o -O' \
\
	d='cd' \
	ls='ls --color=auto' \
	l='ls --group-directories-first' \
	la='l -A' \
	ll='la -lh --color=always' \
	le="$FILES" \
	dz='cd ..' \
	dzz='cd ../..' \
	dzzz='cd ../../..' \
	dx='cd "$OLDPWD"' \
	prwd='realpath .' \
	cp='cp -iv' \
	mv='mv -iv' \
	rm='rm -v' \
	rmr='rm -r' \
	mkdir='mkdir -pv' \
	rmdir='rmdir -v' \
\
	myip='echo "$(curl -s ipinfo.io/ip)"' \
	date='date +"[%w.%d/%m|%H:%M]"' \
	uptime='uptime -p' \
	..='. ~/.bashrc' \
	...='. ~/.bash_profile' \
	....="exec '$SHELL'" \
	grep='grep --color=always' \
	rg='rg --color=always' \
	diff='diff --color=always' \
	+x='chmod +x' \
	filesize='du -shc' \
	sshs='eval "$(ssh-agent -s)"' \
;

PS1="$(
	b="\[$bold\]"
	r="\[$normal\]"
	c="\[$accent\]"
	i() { PS1="$*"; }; i

	i "$b$c\w$r"
	i "\${__git_ps1+\$__git_ps1$c:$r}$PS1"
	i "\h $PS1$c"
	[[ "$(id -u)" = 0 ]] && i "$PS1#" || i "\u$b$c@$r$PS1="
	[[ -n "$SSH_CONNECTION" ]] && i "ssh$c:$r$PS1"
	i "$c\$([ \$? = 0 ] && echo + || echo -)$r $PS1"
echo "$r$PS1$r")"

[[ -f ~/.tmprc ]] && . ~/.tmprc

minifetch
